/// This file is auto-generated by Scribble and shouldn't be edited directly.
/// Use --disarm prior to make any changes.
import "./__scribble_ReentrancyUtils.sol";

contract B is __scribble_ReentrancyUtils {
    uint[] internal arr;

    constructor(uint x) {
        arr.push(x + 1);
        failingInt(arr, msg.data, address(this));
    }

    function failingInt(uint[] storage arrP, bytes memory msgData, address self) internal {
        _original_B_failingInt(arrP, msgData, self);
        unchecked {
            if (!(arrP[0] < 10)) {
                emit AssertionFailed("0: sup brah");
                emit AssertionFailedData(0, abi.encode(arrP));
                assert(false);
            }
        }
    }

    function _original_B_failingInt(uint[] storage arrP, bytes memory msgData, address self) private {}
}